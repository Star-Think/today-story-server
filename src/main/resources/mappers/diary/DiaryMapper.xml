<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.today.story.main.diary.DiaryMapper">
    <select id="diaryGet" resultType="com.today.story.main.diary.dto.DiaryVO">
        SELECT A.* ,
        B.NICKNAME,
        CASE WHEN A.TYPE = '0' THEN '모두공개' ELSE '비공개' END AS TYPE_NAME
        FROM SYS_STORY_CD A
        LEFT JOIN SYS_USER_CD B ON A.USER_ID = B.USER_ID
        WHERE 1=1
        <choose>
            <when test="view_id == user_id">
                AND A.USER_ID = #{view_id}
            </when>
            <when test="view_id != null">
                AND (A.TYPE = '0' AND A.USER_ID = #{view_id})
            </when>
            <otherwise>
                AND ((A.TYPE = '0') OR (A.TYPE = '1' AND A.USER_ID = #{user_id}))
            </otherwise>
        </choose>
        AND A.USER_ID NOT IN (SELECT BLOCK_ID FROM SYS_USER_BLOCK_CD WHERE USER_ID = #{user_id})
        <![CDATA[
        AND A.TYPE <> '2'
        ]]>
        ORDER BY A.SEQ DESC
        OFFSET (#{page}-1)*#{rows} ROWS
        FETCH NEXT #{rows} ROWS ONLY;
    </select>

    <select id="diaryCount" resultType="int">
        SELECT count(A.seq)
        FROM SYS_STORY_CD A
         WHERE 1=1
        <choose>
            <when test="view_id == user_id">
                AND A.USER_ID = #{view_id}
            </when>
            <when test="view_id != null">
                AND (A.TYPE = '0' AND A.USER_ID = #{view_id})
            </when>
            <otherwise>
                AND ((A.TYPE = '0') OR (A.TYPE = '1' AND A.USER_ID = #{user_id}))
            </otherwise>
        </choose>
        AND A.USER_ID NOT IN (SELECT BLOCK_ID FROM SYS_USER_BLOCK_CD WHERE USER_ID = #{user_id})
        <![CDATA[
        AND A.TYPE <> '2'
        ]]>
    </select>

    <select id="diaryDetail" resultType="com.today.story.main.diary.dto.DiaryVO">
        SELECT A.* ,
        B.NICKNAME,
        CASE WHEN A.TYPE = '0' THEN '모두공개' ELSE '비공개' END AS TYPE_NAME
        FROM SYS_STORY_CD A
        LEFT JOIN SYS_USER_CD B ON A.USER_ID = B.USER_ID
        WHERE ((A.TYPE = '0') OR (A.TYPE = '1' AND A.USER_ID = #{user_id})) AND A.SEQ = #{seq}
        <![CDATA[
        AND A.TYPE <> '2'
        ]]>
    </select>

    <select id="commentList" resultType="com.today.story.main.diary.dto.CommentVO">
        SELECT A.* ,
        B.NICKNAME,
        CASE WHEN A.TYPE = '0' THEN '공개' ELSE '비공개' END AS TYPE_NAME
        FROM SYS_STORY_COMMENT_CD A
        LEFT JOIN SYS_USER_CD B ON A.USER_ID = B.USER_ID
        WHERE ((A.TYPE = '0') OR (A.TYPE = '1' AND A.USER_ID = #{user_id})) AND A.STORY_SEQ = #{seq}
        <![CDATA[
        AND A.TYPE <> '2'
        ]]>
        ORDER BY A.SEQ DESC
    </select>

    <insert id="diaryAdd">
        INSERT INTO SYS_STORY_CD
        (TITLE, CONTENT, [TYPE], [VIEW], USER_ID, CREATE_DATE, UPDATE_DATE)
        VALUES(#{title}, #{content}, #{type}, 0, #{user_id}, GETDATE(), GETDATE());

    </insert>

    <update id="diaryUpdate">
        UPDATE SYS_STORY_CD SET
        TITLE = #{title},
        CONTENT = #{content},
        [TYPE] = #{type},
        UPDATE_DATE = GETDATE()
        WHERE SEQ = #{seq} AND USER_ID = #{user_id}
    </update>


    <update id="diaryClick">
        UPDATE SYS_STORY_CD SET
        [VIEW] = [VIEW] + 1
        WHERE SEQ = #{seq}
    </update>

    <delete id="diaryDelete">
        UPDATE SYS_STORY_CD SET
        [TYPE] = '2'
        WHERE SEQ = #{seq} AND USER_ID = #{user_id}
    </delete>

    <delete id="commentStoryDelete">
        UPDATE SYS_STORY_COMMENT_CD SET
        [TYPE] = '2'
        WHERE STORY_SEQ = #{seq}
    </delete>

    <insert id="commentAdd">
        INSERT INTO SYS_STORY_COMMENT_CD
        (STORY_SEQ, CONTENT, [TYPE], USER_ID, CREATE_DATE, UPDATE_DATE)
        VALUES(#{story_seq}, #{content}, #{type}, #{user_id}, GETDATE(), GETDATE());
    </insert>

    <update id="commentUpdate">
        UPDATE SYS_STORY_COMMENT_CD SET
        CONTENT = #{content},
        [TYPE] = #{type},
        UPDATE_DATE = GETDATE()
        WHERE SEQ = #{seq} AND USER_ID = #{user_id}
    </update>

    <delete id="commentDelete">
        UPDATE SYS_STORY_COMMENT_CD SET
        [TYPE] = '2'
        WHERE SEQ = #{seq} AND USER_ID = #{user_id}
    </delete>

    <insert id="reportAdd">
        INSERT INTO SYS_REPORT_CD
        (REPORT_SEQ, CONTENT, [TYPE], USER_ID, CREATE_DATE,REPORT_ID)
        VALUES(#{report_seq}, #{content}, #{type}, #{user_id}, GETDATE(),#{report_id});
    </insert>

    <select id="commentGet" resultType="com.today.story.main.diary.dto.CommentVO">
        SELECT A.* ,
        B.NICKNAME,
        CASE WHEN A.TYPE = '0' THEN '공개' ELSE '비공개' END AS TYPE_NAME
        FROM SYS_STORY_COMMENT_CD A
        LEFT JOIN SYS_USER_CD B ON A.USER_ID = B.USER_ID
        WHERE 1=1
        <choose>
            <when test="view_id == user_id">
                AND A.USER_ID = #{view_id}
            </when>
            <otherwise>
                AND (A.TYPE = '0' AND A.USER_ID = #{view_id})
            </otherwise>
        </choose>
        AND A.USER_ID NOT IN (SELECT BLOCK_ID FROM SYS_USER_BLOCK_CD WHERE USER_ID = #{user_id})
        <![CDATA[
        AND A.TYPE <> '2'
        ]]>
        ORDER BY A.SEQ DESC
        OFFSET (#{page}-1)*#{rows} ROWS
        FETCH NEXT #{rows} ROWS ONLY;
    </select>

    <select id="commentCount" resultType="int">
        SELECT count(A.seq)
        FROM SYS_STORY_COMMENT_CD A
        WHERE 1=1
        <choose>
            <when test="view_id == user_id">
                AND A.USER_ID = #{view_id}
            </when>
            <otherwise>
                AND (A.TYPE = '0' AND A.USER_ID = #{view_id})
            </otherwise>
        </choose>
        AND A.USER_ID NOT IN (SELECT BLOCK_ID FROM SYS_USER_BLOCK_CD WHERE USER_ID = #{user_id})
        <![CDATA[
        AND A.TYPE <> '2'
        ]]>
    </select>


    <select id="commentReceivedGet" resultType="com.today.story.main.diary.dto.CommentVO">
        SELECT A.* ,
        B.NICKNAME,
        CASE WHEN A.TYPE = '0' THEN '공개' ELSE '비공개' END AS TYPE_NAME
        FROM SYS_STORY_COMMENT_CD A
        LEFT JOIN SYS_USER_CD B ON A.USER_ID = B.USER_ID
        WHERE 1=1
        <choose>
            <when test="view_id == user_id">
                AND A.STORY_SEQ IN (SELECT SEQ FROM SYS_STORY_CD WHERE A.USER_ID = #{view_id})
                AND ((A.TYPE = '0') OR (A.TYPE = '1' AND A.USER_ID = #{view_id}))
            </when>
            <otherwise>
                AND A.STORY_SEQ IN (SELECT SEQ FROM SYS_STORY_CD WHERE A.TYPE = '0' AND A.USER_ID = #{view_id})
                AND A.TYPE = '0'
            </otherwise>
        </choose>
        AND A.USER_ID NOT IN (SELECT BLOCK_ID FROM SYS_USER_BLOCK_CD WHERE USER_ID = #{user_id})
        <![CDATA[
        AND A.TYPE <> '2'
        ]]>
        ORDER BY A.SEQ DESC
        OFFSET (#{page}-1)*#{rows} ROWS
        FETCH NEXT #{rows} ROWS ONLY;
    </select>

    <select id="commentReceivedCount" resultType="int">
        SELECT count(A.seq)
        FROM SYS_STORY_COMMENT_CD A
        WHERE 1=1
        <choose>
            <when test="view_id == user_id">
                AND A.STORY_SEQ IN (SELECT SEQ FROM SYS_STORY_CD WHERE A.USER_ID = #{view_id})
                AND ((A.TYPE = '0') OR (A.TYPE = '1' AND A.USER_ID = #{view_id}))
            </when>
            <otherwise>
                AND A.STORY_SEQ IN (SELECT SEQ FROM SYS_STORY_CD WHERE A.TYPE = '0' AND A.USER_ID = #{view_id})
                AND A.TYPE = '0'
            </otherwise>
        </choose>
        AND A.USER_ID NOT IN (SELECT BLOCK_ID FROM SYS_USER_BLOCK_CD WHERE USER_ID = #{user_id})
        <![CDATA[
        AND A.TYPE <> '2'
        ]]>
    </select>

</mapper>